{"version":3,"sources":["store/reducers/auth/types.ts","hooks/useTypedSelector.ts","utils/rules.ts","store/reducers/auth/action-creators.ts","store/reducers/event/types.ts","store/reducers/event/action-creators.ts","store/reducers/action-creators.ts","hooks/useActions.ts","components/LoginForm.tsx","routes/index.ts","utils/date.ts","components/EventCalendar.tsx","components/EventForm.tsx","pages/Login.tsx","pages/Event.tsx","components/AppRouter.tsx","components/Navbar.tsx","App.tsx","store/reducers/auth/index.ts","store/reducers/event/index.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["AuthActionEnum","useTypeSeceltor","useSelector","rules","message","required","validator","_","value","isSameOrAfter","moment","Promise","resolve","reject","Error","EventActionEnum","AuthActionCreators","setUser","user","type","SET_USER","payload","setIsAuth","auth","SET_AUTH","setIsLoading","SET_IS_LOADING","setError","SET_ERROR","login","username","password","dispatch","a","setTimeout","mockUser","data","find","localStorage","setItem","e","logout","removeItem","EventActionCreators","setGuests","SET_GUESTS","setEvents","SET_EVENTS","fetchGuests","console","log","createEvent","event","events","getItem","json","JSON","parse","push","stringify","fetchEvents","currentUserEvents","filter","ev","author","guest","allActionCreators","useActions","useDispatch","bindActionCreators","LoginForm","state","error","isLoading","useState","setUsername","setPassword","labelCol","span","onFinish","style","color","Item","label","name","onChange","target","wrapperCol","offset","htmlType","loading","RouteNames","formatDate","date","year","getFullYear","month","getMonth","day","getDate","EventCalendar","props","dateCellRender","formatedDate","toDate","currentDayEvents","listStyle","map","item","index","status","text","description","EventForm","setEvent","submit","selectDate","guests","Option","justify","publicRoutes","path","LOGIN","exact","component","align","className","privateRoutes","EVENT","modalVisible","setModalVisible","useEffect","onClick","title","visible","footer","onCancel","AppRouter","isAuth","route","to","Navbar","router","useHistory","Header","theme","mode","selectable","App","Content","initialState","action","rootReducer","combineReducers","reducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc5c0fe8.chunk.js","sourcesContent":["import { IUser } from \"../../../models/User\";\r\n\r\nexport interface AuthState{\r\n    isAuth:boolean,\r\n    user: IUser,\r\n    isLoading:boolean,\r\n    error:string\r\n}\r\n\r\nexport enum AuthActionEnum{\r\n    SET_AUTH = \"SET_AUTH\",\r\n    SET_ERROR = \"SET_ERROR\",\r\n    SET_USER = \"SET_USER\",\r\n    SET_IS_LOADING = \"SET_IS_LOADING\",\r\n}\r\n\r\nexport interface SetAuthAction{\r\n    type:AuthActionEnum.SET_AUTH\r\n    payload:boolean,\r\n}\r\n\r\nexport interface SetErrorAction{\r\n    type:AuthActionEnum.SET_ERROR\r\n    payload:string,\r\n}\r\nexport interface SetUserAction{\r\n    type:AuthActionEnum.SET_USER\r\n    payload:IUser,\r\n}\r\nexport interface SetIsLoadingAction{\r\n    type:AuthActionEnum.SET_IS_LOADING\r\n    payload:boolean,\r\n}\r\n\r\nexport type AuthAction = \r\n    SetAuthAction |\r\n    SetUserAction |\r\n    SetErrorAction |\r\n    SetIsLoadingAction","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store\";\r\n\r\nexport const useTypeSeceltor : TypedUseSelectorHook<RootState> = useSelector","import moment, {Moment} from \"moment\";\r\nexport const rules = {\r\n    required:(message:string = \"Обязательное поле!\") => ({\r\n        required: true, \r\n        message, \r\n    }),\r\n    isDateAfter: (message: string) => () => ({\r\n        validator(_: any, value: Moment) {\r\n            if (value.isSameOrAfter(moment())) {\r\n                return Promise.resolve()\r\n            }\r\n            return Promise.reject(new Error(message));\r\n        }\r\n    })\r\n}","import { AppDispatch } from \"../..\";\r\nimport data from \"../../../users/users.json\";\r\nimport { IUser } from \"../../../models/User\";\r\nimport { AuthActionEnum, SetAuthAction, SetErrorAction, SetIsLoadingAction, SetUserAction } from \"./types\";\r\n\r\nexport const AuthActionCreators = {\r\n    setUser: (user : IUser) : SetUserAction => ({type : AuthActionEnum.SET_USER, payload:user}),\r\n    setIsAuth : (auth : boolean) : SetAuthAction => ({type : AuthActionEnum.SET_AUTH, payload:auth}),\r\n    setIsLoading : (payload : boolean) : SetIsLoadingAction => ({type:AuthActionEnum.SET_IS_LOADING,payload}),\r\n    setError: (payload:string) : SetErrorAction => ({type:AuthActionEnum.SET_ERROR,payload}),    \r\n    login : (username : string,password : string) => async (dispatch: AppDispatch) => {\r\n        try{\r\n            dispatch(AuthActionCreators.setIsLoading(true));\r\n            setTimeout( async () => {\r\n                const mockUser = data.find(user => user.username === username && user.password === password)\r\n                if(mockUser){\r\n                    localStorage.setItem('auth','true');\r\n                    localStorage.setItem('username',mockUser.username);\r\n                    dispatch(AuthActionCreators.setUser(mockUser));\r\n                    dispatch(AuthActionCreators.setIsAuth(true));\r\n                }else{\r\n                    dispatch(AuthActionCreators.setError('Неправильный логин или пароль'))\r\n                }\r\n                dispatch(AuthActionCreators.setIsLoading(false));\r\n            },1000);\r\n        }catch (e) {\r\n            dispatch(AuthActionCreators.setError('Произошла ошибка при авторизации'))\r\n        }\r\n    },\r\n    logout : () => async (dispatch: AppDispatch) => {\r\n            localStorage.removeItem('auth');\r\n            localStorage.removeItem('username');\r\n            dispatch(AuthActionCreators.setUser({} as IUser));\r\n            dispatch(AuthActionCreators.setIsAuth(false))\r\n    }\r\n}","import { IEvent } from \"../../../models/IEvent\";\r\nimport { IUser } from \"../../../models/User\";\r\n\r\nexport interface EventState {\r\n    guests : IUser[],\r\n    events:IEvent[]\r\n}\r\n\r\nexport enum  EventActionEnum {\r\n    SET_GUESTS = \"SET_GUESTS\",\r\n    SET_EVENTS = \"SET_EVENTS\"\r\n}\r\n\r\nexport interface SetGuestsAction {\r\n    type:EventActionEnum.SET_GUESTS;\r\n    payload:IUser[]\r\n}\r\nexport interface SetEventsAction {\r\n    type:EventActionEnum.SET_EVENTS;\r\n    payload:IEvent[]\r\n}\r\n\r\nexport type EventAction = \r\n    SetGuestsAction |\r\n    SetEventsAction","\r\nimport { AppDispatch } from \"../..\";\r\nimport data from \"../../../users/users.json\";\r\nimport { IEvent } from \"../../../models/IEvent\";\r\nimport { IUser } from \"../../../models/User\";\r\nimport { EventActionEnum, SetEventsAction, SetGuestsAction } from \"./types\";\r\n\r\n\r\nexport const EventActionCreators = {\r\n    setGuests: (payload:IUser[]):SetGuestsAction => ({type:EventActionEnum.SET_GUESTS,payload}),\r\n    setEvents: (payload:IEvent[]):SetEventsAction => ({type:EventActionEnum.SET_EVENTS,payload}),\r\n    fetchGuests: () => async (dispatch:AppDispatch) => {\r\n        try{\r\n            dispatch(EventActionCreators.setGuests(data));\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    },\r\n    createEvent: (event: IEvent) => async (dispatch:AppDispatch) => {\r\n        try {\r\n            const events = localStorage.getItem(\"events\") || '[]';\r\n            const json = JSON.parse(events) as IEvent[];\r\n            json.push(event);\r\n            dispatch(EventActionCreators.setEvents(json));\r\n            localStorage.setItem(\"events\",JSON.stringify(json));\r\n        } catch (e) {\r\n\r\n        }\r\n    },\r\n    fetchEvents: (username: string) => async (dispatch: AppDispatch) => {\r\n        try {\r\n            const events = localStorage.getItem(\"events\") || '[]'\r\n            const json = JSON.parse(events) as IEvent[];\r\n            const currentUserEvents = json.filter(ev => ev.author === username || ev.guest === username);\r\n            dispatch(EventActionCreators.setEvents(currentUserEvents));\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}","import { AuthActionCreators } from \"./auth/action-creators\";\r\nimport { EventActionCreators } from \"./event/action-creators\";\r\n\r\nexport const allActionCreators = {\r\n    ...AuthActionCreators,\r\n    ...EventActionCreators,\r\n}","import { useDispatch } from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\";\r\nimport { allActionCreators } from \"../store/reducers/action-creators\";\r\n\r\nexport const useActions = () => {\r\n    const dispatch = useDispatch();\r\n    return bindActionCreators(allActionCreators,dispatch);\r\n}","import React, { useState } from 'react'\r\nimport {Form, Input,Button} from 'antd';\r\nimport { rules } from '../utils/rules';\r\nimport { useTypeSeceltor } from '../hooks/useTypedSelector';\r\nimport { useActions } from '../hooks/useActions';\r\n\r\nexport default function LoginForm() {\r\n    const {error,isLoading} = useTypeSeceltor(state => state.auth) \r\n    const [username,setUsername] = useState('');\r\n    const [password,setPassword] = useState('');\r\n    const {login} = useActions();\r\n    const submit = () => {\r\n        login(username,password);\r\n    }\r\n    return (\r\n        <Form\r\n            labelCol={{ span:11}}\r\n            onFinish={submit}\r\n        >\r\n           {error && <div style={{color:'red'}}>{error}</div> }\r\n            <Form.Item\r\n                label=\"Имя пользователя\"\r\n                name=\"username\"\r\n                rules={[rules.required('Пожалуйста введите имя пользователя!')]}\r\n            >\r\n            <Input value={username} onChange={e => setUsername(e.target.value)}/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Пароль\"\r\n                name=\"password\"\r\n                rules={[rules.required('Пожалуйста введите пароль!')]}\r\n            >\r\n            <Input type=\"password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n            </Form.Item>\r\n            <Form.Item wrapperCol={{ offset: 9}}>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\r\n                    Войти\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Login from \"../pages/Login\";\r\nimport Event from \"../pages/Event\";\r\nexport interface iRoute {\r\n    path:string;\r\n    component:React.ComponentType;\r\n    exact?:boolean;\r\n}\r\n\r\nexport enum RouteNames {\r\n    LOGIN = '/login',\r\n    EVENT =  '/calendar-events',\r\n}\r\n\r\nexport const publicRoutes : iRoute[] = [\r\n    {path:RouteNames.LOGIN, exact:true, component:Login}\r\n]\r\n\r\nexport const privateRoutes : iRoute[] = [\r\n    {path:RouteNames.EVENT, exact:true, component:Event}\r\n]\r\n","export const formatDate = (date: Date): string => {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1\r\n    const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate()\r\n    return `${year}.${month}.${day}`\r\n}","import React, { FC, PropsWithChildren } from 'react'\r\nimport { Badge, Calendar } from 'antd'\r\nimport { IEvent } from '../models/IEvent'\r\nimport {Moment} from \"moment\";\r\nimport { formatDate } from '../utils/date';\r\ninterface EventCalendarProps {\r\n    events:IEvent[];\r\n}\r\nconst EventCalendar:FC<EventCalendarProps> =(props:PropsWithChildren<EventCalendarProps>) => {\r\n    function dateCellRender(value:Moment) {\r\n        const formatedDate = formatDate(value.toDate());\r\n        const currentDayEvents = props.events.filter(ev => ev.date === formatedDate);\r\n        return (\r\n          <ul style={{listStyle:'none'}}>\r\n            {currentDayEvents.map((item, index) => (\r\n              <li key={index}>\r\n                <Badge status=\"warning\" text={item.description} />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        );\r\n      }\r\n    return (\r\n        <Calendar dateCellRender={dateCellRender}/>\r\n    )\r\n}\r\nexport default EventCalendar;","import React, {FC, useState} from 'react'\r\nimport {DatePicker, Form, Input, Button, Row,Select} from 'antd'\r\nimport { rules } from '../utils/rules'\r\nimport { IUser } from '../models/User'\r\nimport { IEvent } from '../models/IEvent'\r\nimport {Moment} from \"moment\";\r\nimport {formatDate} from \"../utils/date\";\r\nimport {useTypeSeceltor} from \"../hooks/useTypedSelector\";\r\ninterface EventFormProps {\r\n    guests : IUser[],\r\n    submit : (event : IEvent) => void\r\n}\r\nconst EventForm: FC<EventFormProps> = (props) =>{\r\n    const [event, setEvent] = useState<IEvent>({\r\n        author: '',\r\n        date: '',\r\n        description: '',\r\n        guest: ''\r\n    } as IEvent);\r\n\r\n    const {user} = useTypeSeceltor(state => state.auth)\r\n    const selectDate = (date: Moment | null) => {\r\n        if (date) {\r\n            setEvent({...event, date: formatDate(date.toDate())})\r\n        }\r\n    }\r\n\r\n    const submitForm = () => {\r\n        props.submit({...event, author: user.username})\r\n    }\r\n    return (\r\n        <Form onFinish={submitForm}>\r\n            <Form.Item\r\n                label=\"Описания события\"\r\n                name=\"description\"\r\n                rules={[rules.required()]}\r\n            >\r\n                <Input\r\n                    onChange={e => setEvent({...event, description:e.target.value})}\r\n                    value={event.description}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item\r\n                wrapperCol={{ offset: 2}}\r\n                label=\"Дата события\"\r\n                name=\"data\"\r\n                rules={[rules.required(), rules.isDateAfter(\"Нельзя создать событие в прошлом\")]}\r\n            >\r\n                <DatePicker\r\n                    onChange={(date) => selectDate(date)}\r\n\r\n                />\r\n            </Form.Item>\r\n            <Form.Item\r\n                wrapperCol={{ offset: 2}}\r\n                label=\"Выберите гостя\"\r\n                name=\"guests\"\r\n                rules={[rules.required()]}\r\n            >\r\n                <Select>\r\n                    {props.guests.map(guest => \r\n                        <Select.Option key={guest.username} value={guest.username}>{guest.username}</Select.Option>)}\r\n                </Select>\r\n            </Form.Item>\r\n            <Row justify=\"end\">\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Создать\r\n                    </Button>\r\n                </Form.Item>\r\n            </Row>\r\n        </Form>\r\n    )\r\n}\r\nexport default EventForm;","import { Card, Layout, Row } from 'antd'\r\nimport React from 'react'\r\nimport LoginForm from '../components/LoginForm'\r\n\r\nexport default function Login() {\r\n    return (\r\n        <Layout>\r\n            <Row justify=\"center\" align=\"middle\" className=\"h100\">\r\n                <Card>\r\n                    <LoginForm/>\r\n                </Card>\r\n            </Row>\r\n        </Layout>\r\n    )\r\n}\r\n","import { Button, Layout, Modal, Row } from 'antd'\r\nimport { useState, useEffect } from 'react'\r\nimport EventCalendar from '../components/EventCalendar'\r\nimport EventForm from '../components/EventForm';\r\nimport { useActions } from '../hooks/useActions';\r\nimport { useTypeSeceltor } from '../hooks/useTypedSelector';\r\nimport { IEvent } from '../models/IEvent';\r\n\r\nexport default function Event() {\r\n    const [modalVisible,setModalVisible] = useState(false);\r\n    const {fetchGuests, createEvent,fetchEvents} = useActions();\r\n    const {guests,events} = useTypeSeceltor(state => state.event)\r\n    const {user} = useTypeSeceltor(state => state.auth);\r\n    useEffect(() => {\r\n        fetchGuests();\r\n        fetchEvents(user.username);\r\n    }, [])\r\n\r\n    const addNewEvent = (event:IEvent) => {\r\n        setModalVisible(false);\r\n        createEvent(event);\r\n    }\r\n    return (\r\n        <Layout>\r\n           <EventCalendar events={events}/>\r\n           <Row justify=\"center\">\r\n               <Button onClick={()=>setModalVisible(true)}>Добавить события</Button>\r\n           </Row>\r\n           <Modal\r\n            title=\"Добавить события\"\r\n            visible={modalVisible}\r\n            footer={null}\r\n            onCancel={()=>setModalVisible(false)}\r\n           >\r\n               <EventForm \r\n                guests={guests}\r\n                submit={addNewEvent}\r\n                />\r\n           </Modal>\r\n        </Layout>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router'\r\nimport { useTypeSeceltor } from '../hooks/useTypedSelector';\r\nimport { privateRoutes, publicRoutes, RouteNames } from '../routes';\r\n\r\nexport default function AppRouter() {\r\n    const {isAuth} = useTypeSeceltor(state => state.auth)\r\n    return (\r\n        isAuth\r\n            ?\r\n            <Switch>\r\n                {privateRoutes.map(route => \r\n                    <Route path={route.path} exact={route.exact} component={route.component}\r\n                        key={route.path}\r\n                    />)}\r\n                <Redirect to={RouteNames.EVENT}/>\r\n            </Switch>\r\n            :\r\n            <Switch>\r\n                {publicRoutes.map(route => \r\n                    <Route path={route.path} exact={route.exact} component={route.component}\r\n                        key={route.path}\r\n                    />)}\r\n                <Redirect to={RouteNames.LOGIN}/>\r\n            </Switch>\r\n    )\r\n}\r\n","import { Layout, Row, Menu} from 'antd'\r\nimport React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { RouteNames } from '../routes';\r\nimport { useTypeSeceltor } from '../hooks/useTypedSelector';\r\nimport { useActions } from '../hooks/useActions';\r\n\r\nexport default function Navbar() {\r\n    const router = useHistory();\r\n    const {isAuth, user} = useTypeSeceltor(state => state.auth)\r\n    const {logout} = useActions();\r\n    return (\r\n        <Layout.Header>\r\n            <Row justify=\"end\">\r\n            {isAuth \r\n                ?\r\n                <>\r\n                <div style={{color:'white'}}>Добро пожаловать {user.username}</div>\r\n                <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\r\n                    <Menu.Item \r\n                        onClick={() => logout()} \r\n                        key={1}>\r\n                        Выйти\r\n                    </Menu.Item>\r\n                </Menu>\r\n                </>\r\n                :\r\n                <>\r\n                <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\r\n                    <Menu.Item \r\n                        onClick={() => router.push(RouteNames.LOGIN)} \r\n                        key={1}>\r\n                        Авторизация\r\n                    </Menu.Item>\r\n                </Menu>\r\n                </>\r\n            }\r\n            </Row>\r\n        </Layout.Header>\r\n    )\r\n}\r\n","import { Layout } from 'antd';\nimport { useEffect } from 'react';\nimport './App.css';\nimport AppRouter from './components/AppRouter';\nimport Navbar from './components/Navbar';\nimport { useActions } from './hooks/useActions';\nimport { IUser } from './models/User';\n\nfunction App() {\n  const {setUser,setIsAuth} = useActions();\n  useEffect(() => {\n    if(localStorage.getItem('auth')){\n      setUser({username:localStorage.getItem('username' || '')} as IUser)\n      setIsAuth(true);\n    }\n  }, )\n  \n  return (\n    <Layout>\n      <Navbar/>\n      <Layout.Content>\n        <AppRouter/> \n      </Layout.Content>    \n    </Layout>\n  );\n}\n\nexport default App;\n","import { IUser } from \"../../../models/User\";\r\nimport { AuthAction, AuthActionEnum, AuthState } from \"./types\";\r\nconst initialState: AuthState = {\r\n    isAuth:false,\r\n    error: '',\r\n    isLoading:false,\r\n    user:{} as IUser,\r\n}\r\n\r\nexport default function authReducer(state = initialState,action:AuthAction) : AuthState{\r\n    switch(action.type) {\r\n        case AuthActionEnum.SET_AUTH:\r\n            return {...state, isAuth:action.payload,isLoading:false}\r\n        case AuthActionEnum.SET_ERROR:\r\n            return {...state, error:action.payload,isLoading:false}\r\n        case AuthActionEnum.SET_IS_LOADING: \r\n            return {...state, isLoading:action.payload}\r\n        case AuthActionEnum.SET_USER:\r\n            return {...state, user:action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","import { EventAction, EventActionEnum, EventState } from \"./types\";\r\n\r\nconst initialState : EventState= {\r\n    events: [],\r\n    guests: []\r\n}\r\n\r\nexport default function EventReducer(state = initialState,action:EventAction): EventState{\r\n    switch (action.type) {\r\n        case EventActionEnum.SET_GUESTS:\r\n            return {...state,guests:action.payload}\r\n        case EventActionEnum.SET_EVENTS:\r\n            return {...state, events:action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","import auth from \"./auth\";\r\nimport event from \"./event\";\r\n\r\nexport default{\r\n    auth,\r\n    event,\r\n}","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst rootReducer = combineReducers(reducers)\r\n\r\n\r\nexport const store = createStore(rootReducer,applyMiddleware(thunk));\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport { store } from './store';\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}