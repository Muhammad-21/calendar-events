{"version":3,"sources":["store/reducers/auth/types.ts","hooks/useTypedSelector.ts","utils/rules.ts","store/reducers/auth/action-creators.ts","store/reducers/action-creators.ts","hooks/useActions.ts","components/LoginForm.tsx","routes/index.ts","components/EventCalendar.tsx","components/EventForm.tsx","pages/Login.tsx","pages/Event.tsx","components/AppRouter.tsx","components/Navbar.tsx","App.tsx","store/reducers/auth/index.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["AuthActionEnum","useTypeSeceltor","useSelector","rules","message","required","AuthActionCreators","setUser","user","type","SET_USER","payload","setIsAuth","auth","SET_AUTH","setIsLoading","SET_IS_LOADING","setError","SET_ERROR","login","username","password","dispatch","a","setTimeout","axios","get","response","mockUser","data","find","localStorage","setItem","e","logout","removeItem","allActionCreators","useActions","useDispatch","bindActionCreators","LoginForm","state","error","isLoading","useState","setUsername","setPassword","labelCol","span","onFinish","style","color","Item","label","name","value","onChange","target","wrapperCol","offset","htmlType","loading","RouteNames","EventCalendar","EventForm","Option","disabled","justify","publicRoutes","path","LOGIN","exact","component","align","className","privateRoutes","EVENT","modalVisible","setModalVisible","events","onClick","title","visible","footer","onCancel","AppRouter","isAuth","map","route","to","Navbar","router","useHistory","Header","theme","mode","selectable","push","App","useEffect","getItem","Content","initialState","action","rootReducer","combineReducers","reducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4da1f7b0.chunk.js","sourcesContent":["import { IUser } from \"../../../models/User\";\r\n\r\nexport interface AuthState{\r\n    isAuth:boolean,\r\n    user: IUser,\r\n    isLoading:boolean,\r\n    error:string\r\n}\r\n\r\nexport enum AuthActionEnum{\r\n    SET_AUTH = \"SET_AUTH\",\r\n    SET_ERROR = \"SET_ERROR\",\r\n    SET_USER = \"SET_USER\",\r\n    SET_IS_LOADING = \"SET_IS_LOADING\",\r\n}\r\n\r\nexport interface SetAuthAction{\r\n    type:AuthActionEnum.SET_AUTH\r\n    payload:boolean,\r\n}\r\n\r\nexport interface SetErrorAction{\r\n    type:AuthActionEnum.SET_ERROR\r\n    payload:string,\r\n}\r\nexport interface SetUserAction{\r\n    type:AuthActionEnum.SET_USER\r\n    payload:IUser,\r\n}\r\nexport interface SetIsLoadingAction{\r\n    type:AuthActionEnum.SET_IS_LOADING\r\n    payload:boolean,\r\n}\r\n\r\nexport type AuthAction = \r\n    SetAuthAction |\r\n    SetUserAction |\r\n    SetErrorAction |\r\n    SetIsLoadingAction","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store\";\r\n\r\nexport const useTypeSeceltor : TypedUseSelectorHook<RootState> = useSelector","export const rules = {\r\n    required:(message:string = \"Обязательное поле!\") => ({\r\n        required: true, \r\n        message, \r\n    })\r\n}","import axios from \"axios\";\r\nimport { AppDispatch } from \"../..\";\r\nimport { IUser } from \"../../../models/User\";\r\nimport { AuthActionEnum, SetAuthAction, SetErrorAction, SetIsLoadingAction, SetUserAction } from \"./types\";\r\n\r\nexport const AuthActionCreators = {\r\n    setUser: (user : IUser) : SetUserAction => ({type : AuthActionEnum.SET_USER, payload:user}),\r\n    setIsAuth : (auth : boolean) : SetAuthAction => ({type : AuthActionEnum.SET_AUTH, payload:auth}),\r\n    setIsLoading : (payload : boolean) : SetIsLoadingAction => ({type:AuthActionEnum.SET_IS_LOADING,payload}),\r\n    setError: (payload:string) : SetErrorAction => ({type:AuthActionEnum.SET_ERROR,payload}),    \r\n    login : (username : string,password : string) => async (dispatch: AppDispatch) => {\r\n        try{\r\n            dispatch(AuthActionCreators.setIsLoading(true));\r\n            setTimeout( async () => {\r\n                const response = await axios.get<IUser[]>('./users.json');\r\n                const mockUser = response.data.find(user => user.username === username && user.password === password)\r\n                if(mockUser){\r\n                    localStorage.setItem('auth','true');\r\n                    localStorage.setItem('username',mockUser.username);\r\n                    dispatch(AuthActionCreators.setIsAuth(true))\r\n                    dispatch(AuthActionCreators.setUser(mockUser));\r\n                }else{\r\n                    dispatch(AuthActionCreators.setError('Неправильный логин или пароль'))\r\n                }\r\n                dispatch(AuthActionCreators.setIsLoading(false));\r\n            },1000);\r\n        }catch (e) {\r\n            dispatch(AuthActionCreators.setError('Произошла ошибка при авторизации'))\r\n        }\r\n    },\r\n    logout : () => async (dispatch: AppDispatch) => {\r\n            localStorage.removeItem('auth');\r\n            localStorage.removeItem('username');\r\n            dispatch(AuthActionCreators.setUser({} as IUser));\r\n            dispatch(AuthActionCreators.setIsAuth(false))\r\n    }\r\n}","import { AuthActionCreators } from \"./auth/action-creators\";\r\n\r\nexport const allActionCreators = {\r\n    ...AuthActionCreators,\r\n}","import { useDispatch } from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\";\r\nimport { allActionCreators } from \"../store/reducers/action-creators\";\r\n\r\nexport const useActions = () => {\r\n    const dispatch = useDispatch();\r\n    return bindActionCreators(allActionCreators,dispatch);\r\n}","import React, { useState } from 'react'\r\nimport {Form, Input,Button} from 'antd';\r\nimport { rules } from '../utils/rules';\r\nimport { useTypeSeceltor } from '../hooks/useTypedSelector';\r\nimport { useActions } from '../hooks/useActions';\r\n\r\nexport default function LoginForm() {\r\n    const {error,isLoading} = useTypeSeceltor(state => state.auth) \r\n    const [username,setUsername] = useState('');\r\n    const [password,setPassword] = useState('');\r\n    const {login} = useActions();\r\n    const submit = () => {\r\n        login(username,password);\r\n    }\r\n    return (\r\n        <Form\r\n            labelCol={{ span:11}}\r\n            onFinish={submit}\r\n        >\r\n           {error && <div style={{color:'red'}}>{error}</div> }\r\n            <Form.Item\r\n                label=\"Имя пользователя\"\r\n                name=\"username\"\r\n                rules={[rules.required('Пожалуйста введите имя пользователя!')]}\r\n            >\r\n            <Input value={username} onChange={e => setUsername(e.target.value)}/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Пароль\"\r\n                name=\"password\"\r\n                rules={[rules.required('Пожалуйста введите пароль!')]}\r\n            >\r\n            <Input type=\"password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n            </Form.Item>\r\n            <Form.Item wrapperCol={{ offset: 9}}>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\r\n                    Войти\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Login from \"../pages/Login\";\r\nimport Event from \"../pages/Event\";\r\nexport interface iRoute {\r\n    path:string;\r\n    component:React.ComponentType;\r\n    exact?:boolean;\r\n}\r\n\r\nexport enum RouteNames {\r\n    LOGIN = '/login',\r\n    EVENT =  '/',\r\n}\r\n\r\nexport const publicRoutes : iRoute[] = [\r\n    {path:RouteNames.LOGIN, exact:true, component:Login}\r\n]\r\n\r\nexport const privateRoutes : iRoute[] = [\r\n    {path:RouteNames.EVENT, exact:true, component:Event}\r\n]\r\n","import React, { FC } from 'react'\r\nimport { Calendar } from 'antd'\r\nimport { IEvent } from '../models/IEvent'\r\n\r\ninterface EventCalendarProps {\r\n    events:IEvent[];\r\n}\r\nconst EventCalendar:FC<EventCalendarProps> =() => {\r\n    return (\r\n        <Calendar/>\r\n    )\r\n}\r\nexport default EventCalendar;","import React from 'react'\r\nimport {DatePicker, Form, Input, Button, Row,Select} from 'antd'\r\nimport { rules } from '../utils/rules'\r\nexport default function EventForm() {\r\n    return (\r\n        <Form>\r\n            <Form.Item\r\n                label=\"Описания события\"\r\n                name=\"description\"\r\n                rules={[rules.required()]}\r\n            >\r\n                <Input/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                wrapperCol={{ offset: 2}}\r\n                label=\"Дата события\"\r\n                name=\"data\"\r\n                rules={[rules.required()]}\r\n            >\r\n                <DatePicker/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                wrapperCol={{ offset: 2}}\r\n                label=\"Дата события\"\r\n                name=\"data\"\r\n                rules={[rules.required()]}\r\n            >\r\n                <Select>\r\n                    <Select.Option value=\"jack\">Jack</Select.Option>\r\n                    <Select.Option value=\"lucy\">Lucy</Select.Option>\r\n                    <Select.Option value=\"disabled\" disabled>\r\n                        Disabled\r\n                </Select.Option>\r\n                    <Select.Option value=\"Yiminghe\">yiminghe</Select.Option>\r\n                </Select>\r\n            </Form.Item>\r\n            <Row justify=\"end\">\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Создать\r\n                    </Button>\r\n                </Form.Item>\r\n            </Row>\r\n        </Form>\r\n    )\r\n}\r\n","import { Card, Layout, Row } from 'antd'\r\nimport React from 'react'\r\nimport LoginForm from '../components/LoginForm'\r\n\r\nexport default function Login() {\r\n    return (\r\n        <Layout>\r\n            <Row justify=\"center\" align=\"middle\" className=\"h100\">\r\n                <Card>\r\n                    <LoginForm/>\r\n                </Card>\r\n            </Row>\r\n        </Layout>\r\n    )\r\n}\r\n","import { Button, Layout, Modal, Row } from 'antd'\r\nimport React, { useState } from 'react'\r\nimport EventCalendar from '../components/EventCalendar'\r\nimport EventForm from '../components/EventForm';\r\n\r\nexport default function Event() {\r\n    const [modalVisible,setModalVisible] = useState(false);\r\n    return (\r\n        <Layout>\r\n           <EventCalendar events={[]}/>\r\n           <Row justify=\"center\">\r\n               <Button onClick={()=>setModalVisible(true)}>Добавить события</Button>\r\n           </Row>\r\n           <Modal\r\n            title=\"Добавить события\"\r\n            visible={modalVisible}\r\n            footer={null}\r\n            onCancel={()=>setModalVisible(false)}\r\n           >\r\n               <EventForm/>\r\n           </Modal>\r\n        </Layout>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router'\r\nimport { useTypeSeceltor } from '../hooks/useTypedSelector';\r\nimport { privateRoutes, publicRoutes, RouteNames } from '../routes';\r\n\r\nexport default function AppRouter() {\r\n    const {isAuth} = useTypeSeceltor(state => state.auth)\r\n    return (\r\n        isAuth\r\n            ?\r\n            <Switch>\r\n                {privateRoutes.map(route => \r\n                    <Route path={route.path} exact={route.exact} component={route.component}\r\n                        key={route.path}\r\n                    />)}\r\n                <Redirect to={RouteNames.EVENT}/>\r\n            </Switch>\r\n            :\r\n            <Switch>\r\n                {publicRoutes.map(route => \r\n                    <Route path={route.path} exact={route.exact} component={route.component}\r\n                        key={route.path}\r\n                    />)}\r\n                <Redirect to={RouteNames.LOGIN}/>\r\n            </Switch>\r\n    )\r\n}\r\n","import { Layout, Row, Menu} from 'antd'\r\nimport React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { RouteNames } from '../routes';\r\nimport { useTypeSeceltor } from '../hooks/useTypedSelector';\r\nimport { useActions } from '../hooks/useActions';\r\n\r\nexport default function Navbar() {\r\n    const router = useHistory();\r\n    const {isAuth, user} = useTypeSeceltor(state => state.auth)\r\n    const {logout} = useActions();\r\n    return (\r\n        <Layout.Header>\r\n            <Row justify=\"end\">\r\n            {isAuth \r\n                ?\r\n                <>\r\n                <div style={{color:'white'}}>Добро пожаловать {user.username}</div>\r\n                <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\r\n                    <Menu.Item \r\n                        onClick={() => logout()} \r\n                        key={1}>\r\n                        Выйти\r\n                    </Menu.Item>\r\n                </Menu>\r\n                </>\r\n                :\r\n                <>\r\n                <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\r\n                    <Menu.Item \r\n                        onClick={() => router.push(RouteNames.LOGIN)} \r\n                        key={1}>\r\n                        Авторизация\r\n                    </Menu.Item>\r\n                </Menu>\r\n                </>\r\n            }\r\n            </Row>\r\n        </Layout.Header>\r\n    )\r\n}\r\n","import { Layout } from 'antd';\nimport { useEffect } from 'react';\nimport './App.css';\nimport AppRouter from './components/AppRouter';\nimport Navbar from './components/Navbar';\nimport { useActions } from './hooks/useActions';\nimport { IUser } from './models/User';\n\nfunction App() {\n  const {setUser,setIsAuth} = useActions();\n  useEffect(() => {\n    if(localStorage.getItem('auth')){\n      setUser({username:localStorage.getItem('username' || '')} as IUser)\n      setIsAuth(true);\n    }\n  }, )\n  \n  return (\n    <Layout>\n      <Navbar/>\n      <Layout.Content>\n        <AppRouter/> \n      </Layout.Content>    \n    </Layout>\n  );\n}\n\nexport default App;\n","import { IUser } from \"../../../models/User\";\r\nimport { AuthAction, AuthActionEnum, AuthState } from \"./types\";\r\nconst initialState: AuthState = {\r\n    isAuth:false,\r\n    error: '',\r\n    isLoading:false,\r\n    user:{} as IUser,\r\n}\r\n\r\nexport default function authReducer(state = initialState,action:AuthAction) : AuthState{\r\n    switch(action.type) {\r\n        case AuthActionEnum.SET_AUTH:\r\n            return {...state, isAuth:action.payload,isLoading:false}\r\n        case AuthActionEnum.SET_ERROR:\r\n            return {...state, error:action.payload,isLoading:false}\r\n        case AuthActionEnum.SET_IS_LOADING: \r\n            return {...state, isLoading:action.payload}\r\n        case AuthActionEnum.SET_USER:\r\n            return {...state, user:action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","import auth from \"./auth\";\r\n\r\nexport default{\r\n    auth\r\n}","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst rootReducer = combineReducers(reducers)\r\n\r\n\r\nexport const store = createStore(rootReducer,applyMiddleware(thunk));\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport { store } from './store';\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}