{"version":3,"sources":["store/reducers/auth/types.ts","hooks/useTypedSelector.ts","utils/rules.ts","api/UserService.ts","store/reducers/auth/action-creators.ts","store/reducers/event/types.ts","store/reducers/event/action-creators.ts","store/reducers/action-creators.ts","hooks/useActions.ts","components/LoginForm.tsx","routes/index.ts","components/EventCalendar.tsx","components/EventForm.tsx","pages/Login.tsx","pages/Event.tsx","components/AppRouter.tsx","components/Navbar.tsx","App.tsx","store/reducers/auth/index.ts","store/reducers/event/index.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["AuthActionEnum","useTypeSeceltor","useSelector","rules","message","required","UserService","axios","get","EventActionEnum","AuthActionCreators","setUser","user","type","SET_USER","payload","setIsAuth","auth","SET_AUTH","setIsLoading","SET_IS_LOADING","setError","SET_ERROR","login","username","password","dispatch","a","setTimeout","getUsers","response","mockUser","data","find","localStorage","setItem","e","logout","removeItem","EventActionCreators","setGuests","SET_GUESTS","setEvents","SET_EVENTS","fetchGuests","console","log","allActionCreators","useActions","useDispatch","bindActionCreators","LoginForm","state","error","isLoading","useState","setUsername","setPassword","labelCol","span","onFinish","style","color","Item","label","name","value","onChange","target","wrapperCol","offset","htmlType","loading","RouteNames","EventCalendar","EventForm","props","guests","map","guest","Option","justify","publicRoutes","path","LOGIN","exact","component","align","className","privateRoutes","EVENT","modalVisible","setModalVisible","event","useEffect","events","onClick","title","visible","footer","onCancel","AppRouter","isAuth","route","to","Navbar","router","useHistory","Header","theme","mode","selectable","push","App","getItem","Content","initialState","action","rootReducer","combineReducers","reducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bcc67d40.chunk.js","sourcesContent":["import { IUser } from \"../../../models/User\";\r\n\r\nexport interface AuthState{\r\n    isAuth:boolean,\r\n    user: IUser,\r\n    isLoading:boolean,\r\n    error:string\r\n}\r\n\r\nexport enum AuthActionEnum{\r\n    SET_AUTH = \"SET_AUTH\",\r\n    SET_ERROR = \"SET_ERROR\",\r\n    SET_USER = \"SET_USER\",\r\n    SET_IS_LOADING = \"SET_IS_LOADING\",\r\n}\r\n\r\nexport interface SetAuthAction{\r\n    type:AuthActionEnum.SET_AUTH\r\n    payload:boolean,\r\n}\r\n\r\nexport interface SetErrorAction{\r\n    type:AuthActionEnum.SET_ERROR\r\n    payload:string,\r\n}\r\nexport interface SetUserAction{\r\n    type:AuthActionEnum.SET_USER\r\n    payload:IUser,\r\n}\r\nexport interface SetIsLoadingAction{\r\n    type:AuthActionEnum.SET_IS_LOADING\r\n    payload:boolean,\r\n}\r\n\r\nexport type AuthAction = \r\n    SetAuthAction |\r\n    SetUserAction |\r\n    SetErrorAction |\r\n    SetIsLoadingAction","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store\";\r\n\r\nexport const useTypeSeceltor : TypedUseSelectorHook<RootState> = useSelector","export const rules = {\r\n    required:(message:string = \"Обязательное поле!\") => ({\r\n        required: true, \r\n        message, \r\n    })\r\n}","import axios, {AxiosResponse} from \"axios\";\r\nimport {IUser} from \"../models/User\";\r\n\r\nexport default class UserService {\r\n    static async getUsers(): Promise<AxiosResponse<IUser[]>> {\r\n        return axios.get<IUser[]>('./users.json')\r\n    }\r\n}","import { AppDispatch } from \"../..\";\r\nimport UserService from \"../../../api/UserService\";\r\nimport { IUser } from \"../../../models/User\";\r\nimport { AuthActionEnum, SetAuthAction, SetErrorAction, SetIsLoadingAction, SetUserAction } from \"./types\";\r\n\r\nexport const AuthActionCreators = {\r\n    setUser: (user : IUser) : SetUserAction => ({type : AuthActionEnum.SET_USER, payload:user}),\r\n    setIsAuth : (auth : boolean) : SetAuthAction => ({type : AuthActionEnum.SET_AUTH, payload:auth}),\r\n    setIsLoading : (payload : boolean) : SetIsLoadingAction => ({type:AuthActionEnum.SET_IS_LOADING,payload}),\r\n    setError: (payload:string) : SetErrorAction => ({type:AuthActionEnum.SET_ERROR,payload}),    \r\n    login : (username : string,password : string) => async (dispatch: AppDispatch) => {\r\n        try{\r\n            dispatch(AuthActionCreators.setIsLoading(true));\r\n            setTimeout( async () => {\r\n                const response = await UserService.getUsers();\r\n                const mockUser = response.data.find(user => user.username === username && user.password === password)\r\n                if(mockUser){\r\n                    localStorage.setItem('auth','true');\r\n                    localStorage.setItem('username',mockUser.username);\r\n                    dispatch(AuthActionCreators.setIsAuth(true))\r\n                    dispatch(AuthActionCreators.setUser(mockUser));\r\n                }else{\r\n                    dispatch(AuthActionCreators.setError('Неправильный логин или пароль'))\r\n                }\r\n                dispatch(AuthActionCreators.setIsLoading(false));\r\n            },1000);\r\n        }catch (e) {\r\n            dispatch(AuthActionCreators.setError('Произошла ошибка при авторизации'))\r\n        }\r\n    },\r\n    logout : () => async (dispatch: AppDispatch) => {\r\n            localStorage.removeItem('auth');\r\n            localStorage.removeItem('username');\r\n            dispatch(AuthActionCreators.setUser({} as IUser));\r\n            dispatch(AuthActionCreators.setIsAuth(false))\r\n    }\r\n}","import { IEvent } from \"../../../models/IEvent\";\r\nimport { IUser } from \"../../../models/User\";\r\n\r\nexport interface EventState {\r\n    guests : IUser[],\r\n    events:IEvent[]\r\n}\r\n\r\nexport enum  EventActionEnum {\r\n    SET_GUESTS = \"SET_GUESTS\",\r\n    SET_EVENTS = \"SET_EVENTS\"\r\n}\r\n\r\nexport interface SetGuestsAction {\r\n    type:EventActionEnum.SET_GUESTS;\r\n    payload:IUser[]\r\n}\r\nexport interface SetEventsAction {\r\n    type:EventActionEnum.SET_EVENTS;\r\n    payload:IEvent[]\r\n}\r\n\r\nexport type EventAction = \r\n    SetGuestsAction |\r\n    SetEventsAction","\r\nimport { AppDispatch } from \"../..\";\r\nimport UserService from \"../../../api/UserService\";\r\nimport { IEvent } from \"../../../models/IEvent\";\r\nimport { IUser } from \"../../../models/User\";\r\nimport { EventActionEnum, SetEventsAction, SetGuestsAction } from \"./types\";\r\n\r\n\r\nexport const EventActionCreators = {\r\n    setGuests: (payload:IUser[]):SetGuestsAction => ({type:EventActionEnum.SET_GUESTS,payload}),\r\n    setEvents: (payload:IEvent[]):SetEventsAction => ({type:EventActionEnum.SET_EVENTS,payload}),\r\n    fetchGuests: () => async (dispatch:AppDispatch) => {\r\n        try{\r\n            const response = await UserService.getUsers();\r\n            dispatch(EventActionCreators.setGuests(response.data));\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n}","import { AuthActionCreators } from \"./auth/action-creators\";\r\nimport { EventActionCreators } from \"./event/action-creators\";\r\n\r\nexport const allActionCreators = {\r\n    ...AuthActionCreators,\r\n    ...EventActionCreators,\r\n}","import { useDispatch } from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\";\r\nimport { allActionCreators } from \"../store/reducers/action-creators\";\r\n\r\nexport const useActions = () => {\r\n    const dispatch = useDispatch();\r\n    return bindActionCreators(allActionCreators,dispatch);\r\n}","import React, { useState } from 'react'\r\nimport {Form, Input,Button} from 'antd';\r\nimport { rules } from '../utils/rules';\r\nimport { useTypeSeceltor } from '../hooks/useTypedSelector';\r\nimport { useActions } from '../hooks/useActions';\r\n\r\nexport default function LoginForm() {\r\n    const {error,isLoading} = useTypeSeceltor(state => state.auth) \r\n    const [username,setUsername] = useState('');\r\n    const [password,setPassword] = useState('');\r\n    const {login} = useActions();\r\n    const submit = () => {\r\n        login(username,password);\r\n    }\r\n    return (\r\n        <Form\r\n            labelCol={{ span:11}}\r\n            onFinish={submit}\r\n        >\r\n           {error && <div style={{color:'red'}}>{error}</div> }\r\n            <Form.Item\r\n                label=\"Имя пользователя\"\r\n                name=\"username\"\r\n                rules={[rules.required('Пожалуйста введите имя пользователя!')]}\r\n            >\r\n            <Input value={username} onChange={e => setUsername(e.target.value)}/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Пароль\"\r\n                name=\"password\"\r\n                rules={[rules.required('Пожалуйста введите пароль!')]}\r\n            >\r\n            <Input type=\"password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n            </Form.Item>\r\n            <Form.Item wrapperCol={{ offset: 9}}>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\r\n                    Войти\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Login from \"../pages/Login\";\r\nimport Event from \"../pages/Event\";\r\nexport interface iRoute {\r\n    path:string;\r\n    component:React.ComponentType;\r\n    exact?:boolean;\r\n}\r\n\r\nexport enum RouteNames {\r\n    LOGIN = '/login',\r\n    EVENT =  '/',\r\n}\r\n\r\nexport const publicRoutes : iRoute[] = [\r\n    {path:RouteNames.LOGIN, exact:true, component:Login}\r\n]\r\n\r\nexport const privateRoutes : iRoute[] = [\r\n    {path:RouteNames.EVENT, exact:true, component:Event}\r\n]\r\n","import React, { FC } from 'react'\r\nimport { Calendar } from 'antd'\r\nimport { IEvent } from '../models/IEvent'\r\n\r\ninterface EventCalendarProps {\r\n    events:IEvent[];\r\n}\r\nconst EventCalendar:FC<EventCalendarProps> =() => {\r\n    return (\r\n        <Calendar/>\r\n    )\r\n}\r\nexport default EventCalendar;","import React, {FC} from 'react'\r\nimport {DatePicker, Form, Input, Button, Row,Select} from 'antd'\r\nimport { rules } from '../utils/rules'\r\nimport { IUser } from '../models/User'\r\n\r\ninterface EventFormProps {\r\n    guests : IUser[]\r\n}\r\nconst EventForm: FC<EventFormProps> = (props) =>{\r\n    return (\r\n        <Form>\r\n            <Form.Item\r\n                label=\"Описания события\"\r\n                name=\"description\"\r\n                rules={[rules.required()]}\r\n            >\r\n                <Input/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                wrapperCol={{ offset: 2}}\r\n                label=\"Дата события\"\r\n                name=\"data\"\r\n                rules={[rules.required()]}\r\n            >\r\n                <DatePicker/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                wrapperCol={{ offset: 2}}\r\n                label=\"Дата события\"\r\n                name=\"data\"\r\n                rules={[rules.required()]}\r\n            >\r\n                <Select>\r\n                    {props.guests.map(guest => \r\n                        <Select.Option value={guest.username}>{guest.username}</Select.Option>)}\r\n                </Select>\r\n            </Form.Item>\r\n            <Row justify=\"end\">\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Создать\r\n                    </Button>\r\n                </Form.Item>\r\n            </Row>\r\n        </Form>\r\n    )\r\n}\r\nexport default EventForm;","import { Card, Layout, Row } from 'antd'\r\nimport React from 'react'\r\nimport LoginForm from '../components/LoginForm'\r\n\r\nexport default function Login() {\r\n    return (\r\n        <Layout>\r\n            <Row justify=\"center\" align=\"middle\" className=\"h100\">\r\n                <Card>\r\n                    <LoginForm/>\r\n                </Card>\r\n            </Row>\r\n        </Layout>\r\n    )\r\n}\r\n","import { Button, Layout, Modal, Row } from 'antd'\r\nimport { useState, useEffect } from 'react'\r\nimport EventCalendar from '../components/EventCalendar'\r\nimport EventForm from '../components/EventForm';\r\nimport { useActions } from '../hooks/useActions';\r\nimport { useTypeSeceltor } from '../hooks/useTypedSelector';\r\n\r\nexport default function Event() {\r\n    const [modalVisible,setModalVisible] = useState(false);\r\n    const {fetchGuests} = useActions();\r\n    const {guests} = useTypeSeceltor(state => state.event)\r\n    useEffect(() => {\r\n        fetchGuests();\r\n    }, [])\r\n    return (\r\n        <Layout>\r\n           <EventCalendar events={[]}/>\r\n           <Row justify=\"center\">\r\n               <Button onClick={()=>setModalVisible(true)}>Добавить события</Button>\r\n           </Row>\r\n           <Modal\r\n            title=\"Добавить события\"\r\n            visible={modalVisible}\r\n            footer={null}\r\n            onCancel={()=>setModalVisible(false)}\r\n           >\r\n               <EventForm guests={guests}/>\r\n           </Modal>\r\n        </Layout>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router'\r\nimport { useTypeSeceltor } from '../hooks/useTypedSelector';\r\nimport { privateRoutes, publicRoutes, RouteNames } from '../routes';\r\n\r\nexport default function AppRouter() {\r\n    const {isAuth} = useTypeSeceltor(state => state.auth)\r\n    return (\r\n        isAuth\r\n            ?\r\n            <Switch>\r\n                {privateRoutes.map(route => \r\n                    <Route path={route.path} exact={route.exact} component={route.component}\r\n                        key={route.path}\r\n                    />)}\r\n                <Redirect to={RouteNames.EVENT}/>\r\n            </Switch>\r\n            :\r\n            <Switch>\r\n                {publicRoutes.map(route => \r\n                    <Route path={route.path} exact={route.exact} component={route.component}\r\n                        key={route.path}\r\n                    />)}\r\n                <Redirect to={RouteNames.LOGIN}/>\r\n            </Switch>\r\n    )\r\n}\r\n","import { Layout, Row, Menu} from 'antd'\r\nimport React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { RouteNames } from '../routes';\r\nimport { useTypeSeceltor } from '../hooks/useTypedSelector';\r\nimport { useActions } from '../hooks/useActions';\r\n\r\nexport default function Navbar() {\r\n    const router = useHistory();\r\n    const {isAuth, user} = useTypeSeceltor(state => state.auth)\r\n    const {logout} = useActions();\r\n    return (\r\n        <Layout.Header>\r\n            <Row justify=\"end\">\r\n            {isAuth \r\n                ?\r\n                <>\r\n                <div style={{color:'white'}}>Добро пожаловать {user.username}</div>\r\n                <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\r\n                    <Menu.Item \r\n                        onClick={() => logout()} \r\n                        key={1}>\r\n                        Выйти\r\n                    </Menu.Item>\r\n                </Menu>\r\n                </>\r\n                :\r\n                <>\r\n                <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\r\n                    <Menu.Item \r\n                        onClick={() => router.push(RouteNames.LOGIN)} \r\n                        key={1}>\r\n                        Авторизация\r\n                    </Menu.Item>\r\n                </Menu>\r\n                </>\r\n            }\r\n            </Row>\r\n        </Layout.Header>\r\n    )\r\n}\r\n","import { Layout } from 'antd';\nimport { useEffect } from 'react';\nimport './App.css';\nimport AppRouter from './components/AppRouter';\nimport Navbar from './components/Navbar';\nimport { useActions } from './hooks/useActions';\nimport { IUser } from './models/User';\n\nfunction App() {\n  const {setUser,setIsAuth} = useActions();\n  useEffect(() => {\n    if(localStorage.getItem('auth')){\n      setUser({username:localStorage.getItem('username' || '')} as IUser)\n      setIsAuth(true);\n    }\n  }, )\n  \n  return (\n    <Layout>\n      <Navbar/>\n      <Layout.Content>\n        <AppRouter/> \n      </Layout.Content>    \n    </Layout>\n  );\n}\n\nexport default App;\n","import { IUser } from \"../../../models/User\";\r\nimport { AuthAction, AuthActionEnum, AuthState } from \"./types\";\r\nconst initialState: AuthState = {\r\n    isAuth:false,\r\n    error: '',\r\n    isLoading:false,\r\n    user:{} as IUser,\r\n}\r\n\r\nexport default function authReducer(state = initialState,action:AuthAction) : AuthState{\r\n    switch(action.type) {\r\n        case AuthActionEnum.SET_AUTH:\r\n            return {...state, isAuth:action.payload,isLoading:false}\r\n        case AuthActionEnum.SET_ERROR:\r\n            return {...state, error:action.payload,isLoading:false}\r\n        case AuthActionEnum.SET_IS_LOADING: \r\n            return {...state, isLoading:action.payload}\r\n        case AuthActionEnum.SET_USER:\r\n            return {...state, user:action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","import { EventAction, EventActionEnum, EventState } from \"./types\";\r\n\r\nconst initialState : EventState= {\r\n    events: [],\r\n    guests: []\r\n}\r\n\r\nexport default function EventReducer(state = initialState,action:EventAction): EventState{\r\n    switch (action.type) {\r\n        case EventActionEnum.SET_GUESTS:\r\n            return {...state,guests:action.payload}\r\n        case EventActionEnum.SET_EVENTS:\r\n            return {...state, events:action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","import auth from \"./auth\";\r\nimport event from \"./event\";\r\n\r\nexport default{\r\n    auth,\r\n    event,\r\n}","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst rootReducer = combineReducers(reducers)\r\n\r\n\r\nexport const store = createStore(rootReducer,applyMiddleware(thunk));\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport { store } from './store';\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}